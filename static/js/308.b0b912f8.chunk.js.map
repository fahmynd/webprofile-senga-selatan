{"version":3,"file":"static/js/308.b0b912f8.chunk.js","mappings":"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","sources":["components/berita/PostDetail.js","components/helper.min.js","../node_modules/html-to-formatted-text/dist/index.js","../node_modules/html-to-formatted-text/dist/utils.js","../node_modules/striptags/src/striptags.js"],"sourcesContent":["import axios from 'axios';\r\nimport React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport htmlToFormattedText from 'html-to-formatted-text'\r\nimport { tgl_indo } from '../../components/helper.min';\r\n\r\nconst PostDetail = () => {\r\n    const { slug } = useParams();\r\n    const [judul, setJudul] = useState();\r\n    const [foto, setFoto] = useState();\r\n    const [date, setDate] = useState();\r\n    const [isi, setIsi] = useState();\r\n\r\n    useEffect(() => {\r\n        if (slug) {\r\n            axios.get(`https://profil.digitaldesa.id/sengaselatan-luwu/berita/detail?slug=${slug}`)\r\n                .then((result) => {\r\n                    // console.log(result.data.data);\r\n                    const data = result.data.data;\r\n                    setJudul(data.judul);\r\n                    setFoto(data.foto);\r\n                    setDate(data.iat);\r\n                    setIsi(data.isi);\r\n                })\r\n        }\r\n\r\n    }, [slug])\r\n\r\n    useEffect(function () {\r\n        document.title = judul + \" | Website Resmi Desa Senga Selatan\";\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"konten\" itemScope itemType=\"http://schema.org/Blog\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 style={{ fontSize: '1.75rem' }} itemProp=\"name\">{judul}</h1>\r\n                        <p>{tgl_indo(date)}</p>\r\n                    </div>\r\n                    <div className=\"col-md-12 mt-2 text-center\">\r\n                        <img className=\"img-content\" src={'https://profil.digitaldesa.id/uploads/73.17.07.2014/berita/thumbs/' + foto} width=\"70%\" alt=\"Foto Berita\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"addthis_inline_share_toolbox\"></div>\r\n                </div>\r\n                <div className=\"container mt-5 mb-5\">\r\n                    <div className=\"isi-konten\" itemProp=\"description\">\r\n                        <p>\r\n                            {htmlToFormattedText(isi)}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostDetail","export const substr = (str, start, end) => {\r\n    if (str == null)\r\n        return \"\";\r\n    else {\r\n        return str.substring(start, (start + end))\r\n    }\r\n}\r\nexport const tgl_indo = (tgl) => {\r\n    if (tgl == \"0000-00-00\")\r\n        return \"-\";\r\n    else {\r\n        let tanggal = substr(tgl, 8, 2);\r\n        let bulan = get_bulan(substr(tgl, 5, 2));\r\n        let tahun = substr(tgl, 0, 4);\r\n        return tanggal + ' ' + bulan + ' ' + tahun\r\n    }\r\n}\r\nexport const format_tgl = (tgl, indo = !0) => {\r\n    if (substr(tgl, 2, 1) == '-') {\r\n        let tanggal = substr(tgl, 0, 2);\r\n        let bulan = substr(tgl, 3, 2);\r\n        let tahun = substr(tgl, 6, 4);\r\n        return tahun + '-' + bulan + '-' + tanggal\r\n    }\r\n    else if (substr(tgl, 4, 1) == '-') {\r\n        let tahun = substr(tgl, 0, 4);\r\n        let bulan = substr(tgl, 5, 2);\r\n        let tanggal = substr(tgl, 8, 2);\r\n        let waktu = substr(tgl, 11, 8);\r\n        return indo ? tanggal + ' ' + get_bulan(bulan) + ' ' + tahun + ', ' + set_waktu(waktu) : tanggal + '-' + bulan + '-' + tahun\r\n    }\r\n}\r\n\r\nexport const set_waktu = (wkt) => {\r\n    let jam = substr(wkt, 0, 2);\r\n    let menit = substr(wkt, 3, 2);\r\n    if (jam < 12) {\r\n        let AMPM = \"AM\";\r\n        if (jam == 0) jam = 12\r\n    }\r\n    else {\r\n        let AMPM = \"PM\";\r\n        if (jam != 12) jam = jam - 12\r\n    }\r\n    return jam + ':' + menit + ' ' + 'AMPM'\r\n}\r\n\r\nexport const get_hari = (day) => {\r\n    if (parseInt(day) == 0)\r\n        return \"Ahad\";\r\n    else if (parseInt(day) == 1)\r\n        return \"Senin\";\r\n    else if (parseInt(day) == 2)\r\n        return \"Selasa\";\r\n    else if (parseInt(day) == 3)\r\n        return \"Rabu\";\r\n    else if (parseInt(day) == 4)\r\n        return \"Kamis\";\r\n    else if (parseInt(day) == 5)\r\n        return \"Jumat\";\r\n    else if (parseInt(day) == 6)\r\n        return \"Sabtu\";\r\n    else\r\n        return day;\r\n}\r\n\r\nexport const get_bulan = (bln) => {\r\n    if (parseInt(bln) == 1)\r\n        return \"Januari\";\r\n    else if (parseInt(bln) == 2)\r\n        return \"Februari\";\r\n    else if (parseInt(bln) == 3)\r\n        return \"Maret\";\r\n    else if (parseInt(bln) == 4)\r\n        return \"April\";\r\n    else if (parseInt(bln) == 5)\r\n        return \"Mei\";\r\n    else if (parseInt(bln) == 6)\r\n        return \"Juni\";\r\n    else if (parseInt(bln) == 7)\r\n        return \"Juli\";\r\n    else if (parseInt(bln) == 8)\r\n        return \"Agustus\";\r\n    else if (parseInt(bln) == 9)\r\n        return \"September\";\r\n    else if (parseInt(bln) == 10)\r\n        return \"Oktober\";\r\n    else if (parseInt(bln) == 11)\r\n        return \"November\";\r\n    else if (parseInt(bln) == 12)\r\n        return \"Desember\";\r\n    else\r\n        return bln;\r\n}\r\n\r\nexport const rupiah = (angka, kurs = '') => {\r\n    if (kurs)\r\n        return kurs + ' ' + (parseInt(angka)).formatMoney(0, '.', ',');\r\n    return 'Rp' + (parseInt(angka)).formatMoney(0, ',', '.') + ',-'\r\n}\r\n\r\nNumber.prototype.formatMoney = function (c, d, t) {\r\n    var n = this, c = isNaN(c = Math.abs(c)) ? 2 : c, d = d == undefined ? \".\" : d, t = t == undefined ? \",\" : t, s = n < 0 ? \"-\" : \"\", i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))), j = (j = i.length) > 3 ? j % 3 : 0;\r\n    return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\")\r\n};\r\n\r\nexport const formatAngka = (x) => {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n}\r\n\r\n","'use strict';var _striptags=require('striptags'),_striptags2=_interopRequireDefault(_striptags),_utils=require('./utils');function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}var TAGS_TO_BREAK_ON=['p','div','br','hr','title','h1','h2','h3','h4','h5','h6','ol','ul','li','pre','table','th','td','blockquote','header','footer','nav','section','summary','aside','article','address'],removeAllNonTagsToBreakOn=function(a){return(0,_striptags2.default)(a,TAGS_TO_BREAK_ON)},convertTagsToBreak=function(a){return(0,_striptags2.default)(a,[],'\\n')},replaceSpaces=function(a){return a.replace(/&nbsp;/g,' ')},replaceMultiNewLines=function(a){return a.replace(/\\n\\n/g,'\\n')},removeLeadingNewLines=function(a){return a.replace(/\\n+$/,'')},removeTrailingNewLines=function(a){return a.replace(/^\\n+/,'')};module.exports=(0,_utils.compose)(removeTrailingNewLines,removeLeadingNewLines,replaceMultiNewLines,replaceSpaces,convertTagsToBreak,removeAllNonTagsToBreakOn);","\"use strict\";var compose=function(){for(var a=arguments.length,b=Array(a),c=0;c<a;c++)b[c]=arguments[c];return b.reduce(function(a,b){return function(){return a(b.apply(void 0,arguments))}})};module.exports={compose:compose};","'use strict';\n\n(function (global) {\n\n    // minimal symbol polyfill for IE11 and others\n    if (typeof Symbol !== 'function') {\n        var Symbol = function(name) {\n            return name;\n        }\n\n        Symbol.nonNative = true;\n    }\n\n    const STATE_PLAINTEXT = Symbol('plaintext');\n    const STATE_HTML      = Symbol('html');\n    const STATE_COMMENT   = Symbol('comment');\n\n    const ALLOWED_TAGS_REGEX  = /<(\\w*)>/g;\n    const NORMALIZE_TAG_REGEX = /<\\/?([^\\s\\/>]+)/;\n\n    function striptags(html, allowable_tags, tag_replacement) {\n        html            = html || '';\n        allowable_tags  = allowable_tags || [];\n        tag_replacement = tag_replacement || '';\n\n        let context = init_context(allowable_tags, tag_replacement);\n\n        return striptags_internal(html, context);\n    }\n\n    function init_striptags_stream(allowable_tags, tag_replacement) {\n        allowable_tags  = allowable_tags || [];\n        tag_replacement = tag_replacement || '';\n\n        let context = init_context(allowable_tags, tag_replacement);\n\n        return function striptags_stream(html) {\n            return striptags_internal(html || '', context);\n        };\n    }\n\n    striptags.init_streaming_mode = init_striptags_stream;\n\n    function init_context(allowable_tags, tag_replacement) {\n        allowable_tags = parse_allowable_tags(allowable_tags);\n\n        return {\n            allowable_tags : allowable_tags,\n            tag_replacement: tag_replacement,\n\n            state         : STATE_PLAINTEXT,\n            tag_buffer    : '',\n            depth         : 0,\n            in_quote_char : ''\n        };\n    }\n\n    function striptags_internal(html, context) {\n        let allowable_tags  = context.allowable_tags;\n        let tag_replacement = context.tag_replacement;\n\n        let state         = context.state;\n        let tag_buffer    = context.tag_buffer;\n        let depth         = context.depth;\n        let in_quote_char = context.in_quote_char;\n        let output        = '';\n\n        for (let idx = 0, length = html.length; idx < length; idx++) {\n            let char = html[idx];\n\n            if (state === STATE_PLAINTEXT) {\n                switch (char) {\n                    case '<':\n                        state       = STATE_HTML;\n                        tag_buffer += char;\n                        break;\n\n                    default:\n                        output += char;\n                        break;\n                }\n            }\n\n            else if (state === STATE_HTML) {\n                switch (char) {\n                    case '<':\n                        // ignore '<' if inside a quote\n                        if (in_quote_char) {\n                            break;\n                        }\n\n                        // we're seeing a nested '<'\n                        depth++;\n                        break;\n\n                    case '>':\n                        // ignore '>' if inside a quote\n                        if (in_quote_char) {\n                            break;\n                        }\n\n                        // something like this is happening: '<<>>'\n                        if (depth) {\n                            depth--;\n\n                            break;\n                        }\n\n                        // this is closing the tag in tag_buffer\n                        in_quote_char = '';\n                        state         = STATE_PLAINTEXT;\n                        tag_buffer   += '>';\n\n                        if (allowable_tags.has(normalize_tag(tag_buffer))) {\n                            output += tag_buffer;\n                        } else {\n                            output += tag_replacement;\n                        }\n\n                        tag_buffer = '';\n                        break;\n\n                    case '\"':\n                    case '\\'':\n                        // catch both single and double quotes\n\n                        if (char === in_quote_char) {\n                            in_quote_char = '';\n                        } else {\n                            in_quote_char = in_quote_char || char;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    case '-':\n                        if (tag_buffer === '<!-') {\n                            state = STATE_COMMENT;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    case ' ':\n                    case '\\n':\n                        if (tag_buffer === '<') {\n                            state      = STATE_PLAINTEXT;\n                            output    += '< ';\n                            tag_buffer = '';\n\n                            break;\n                        }\n\n                        tag_buffer += char;\n                        break;\n\n                    default:\n                        tag_buffer += char;\n                        break;\n                }\n            }\n\n            else if (state === STATE_COMMENT) {\n                switch (char) {\n                    case '>':\n                        if (tag_buffer.slice(-2) == '--') {\n                            // close the comment\n                            state = STATE_PLAINTEXT;\n                        }\n\n                        tag_buffer = '';\n                        break;\n\n                    default:\n                        tag_buffer += char;\n                        break;\n                }\n            }\n        }\n\n        // save the context for future iterations\n        context.state         = state;\n        context.tag_buffer    = tag_buffer;\n        context.depth         = depth;\n        context.in_quote_char = in_quote_char;\n\n        return output;\n    }\n\n    function parse_allowable_tags(allowable_tags) {\n        let tag_set = new Set();\n\n        if (typeof allowable_tags === 'string') {\n            let match;\n\n            while ((match = ALLOWED_TAGS_REGEX.exec(allowable_tags))) {\n                tag_set.add(match[1]);\n            }\n        }\n\n        else if (!Symbol.nonNative &&\n                 typeof allowable_tags[Symbol.iterator] === 'function') {\n\n            tag_set = new Set(allowable_tags);\n        }\n\n        else if (typeof allowable_tags.forEach === 'function') {\n            // IE11 compatible\n            allowable_tags.forEach(tag_set.add, tag_set);\n        }\n\n        return tag_set;\n    }\n\n    function normalize_tag(tag_buffer) {\n        let match = NORMALIZE_TAG_REGEX.exec(tag_buffer);\n\n        return match ? match[1].toLowerCase() : null;\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(function module_factory() { return striptags; });\n    }\n\n    else if (typeof module === 'object' && module.exports) {\n        // Node\n        module.exports = striptags;\n    }\n\n    else {\n        // Browser\n        global.striptags = striptags;\n    }\n}(this));\n"],"names":["slug","useParams","useState","judul","setJudul","foto","setFoto","date","setDate","isi","setIsi","useEffect","axios","then","result","data","iat","document","title","className","itemScope","itemType","style","fontSize","itemProp","tgl_indo","src","width","alt","htmlToFormattedText","substr","str","start","end","substring","tgl","get_bulan","bln","parseInt","rupiah","angka","kurs","formatMoney","Number","prototype","c","d","t","n","this","s","isNaN","Math","abs","undefined","i","String","toFixed","j","length","replace","slice","a","_striptags","require","_striptags2","__esModule","default","_utils","TAGS_TO_BREAK_ON","module","exports","compose","arguments","b","Array","reduce","apply","global","Symbol","name","nonNative","STATE_PLAINTEXT","STATE_HTML","STATE_COMMENT","ALLOWED_TAGS_REGEX","NORMALIZE_TAG_REGEX","striptags","html","allowable_tags","tag_replacement","striptags_internal","init_context","match","tag_set","Set","exec","add","iterator","forEach","parse_allowable_tags","state","tag_buffer","depth","in_quote_char","context","output","idx","char","has","normalize_tag","toLowerCase","init_streaming_mode","define"],"sourceRoot":""}